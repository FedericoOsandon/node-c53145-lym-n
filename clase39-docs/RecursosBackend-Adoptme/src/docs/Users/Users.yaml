paths: 
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags: 
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor, usualmente generado por una query defectuaosa o un fallo de la conexión con la base de datos.
  /api/users:
    post:
      summary: Crea un nuevo usuario
      tags: 
        - Users
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/createUser'
      responses: 
        "201":
          description: El usurio fue creado exitosamente
  
  /api/users/{uid}:
    get: 
      summary: Obtiene un usuario a partid de su id
      tags: 
        - Users
      parameters: 
        - name: uid
          in: path
          required: true
          description: id del usuario que se desea solicitar
          schema:
            $type: String
      responses:
        "200":
          description: Usuario encontrado correctamente
          content: 
            application/json:
              schema:
                $ref: '#components/schemas/User'

components:
  schemas:  
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado de Mongo
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario
        password:
          type: String
          description: Password del usuario
      example:
        _id: ObjectId('alksfdasdflajasjdflasdfas')
        first_name: Fede
        last_name: Osandón
        email: f@gmail.com
        password: fasdf$as.asdf$asf&afdsf./asfdkjhasdf
  
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: String
          description: Nombre del usuario
        last_name:
          type: String
          description: Apellido del usuario
        email:
          type: String
          description: Email del usuario, este debe ser único
        password:
          type: String
          description: Password del usuario
      example:
        first_name: Fede
        last_name: Osandón
        email: fede@gmail.com
        password: f123456
      